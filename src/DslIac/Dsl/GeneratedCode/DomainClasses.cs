//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace Variamos.IacTemplateGenerator.IacLanguage
{
	/// <summary>
	/// DomainClass IacModel
	/// The root in which all other elements are embedded. Appears as a diagram.
	/// </summary>
	[DslDesign::DisplayNameResource("Variamos.IacTemplateGenerator.IacLanguage.IacModel.DisplayName", typeof(global::Variamos.IacTemplateGenerator.IacLanguage.IacLanguageDomainModel), "Variamos.IacTemplateGenerator.IacLanguage.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Variamos.IacTemplateGenerator.IacLanguage.IacModel.Description", typeof(global::Variamos.IacTemplateGenerator.IacLanguage.IacLanguageDomainModel), "Variamos.IacTemplateGenerator.IacLanguage.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Variamos.IacTemplateGenerator.IacLanguage.IacLanguageDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (name = {namePropertyStorage})")]
	[DslModeling::DomainObjectId("f9375a29-ff04-4f61-926f-50894315f0d6")]
	public partial class IacModel : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// IacModel domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xf9375a29, 0xff04, 0x4f61, 0x92, 0x6f, 0x50, 0x89, 0x43, 0x15, 0xf0, 0xd6);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public IacModel(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public IacModel(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region name domain property code
		
		/// <summary>
		/// name domain property Id.
		/// </summary>
		public static readonly global::System.Guid nameDomainPropertyId = new global::System.Guid(0x83d8ef07, 0x00ab, 0x4f81, 0x8f, 0xaf, 0xbf, 0xca, 0x0d, 0x99, 0xf4, 0x15);
		
		/// <summary>
		/// Storage for name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of name domain property.
		/// Description for Variamos.IacTemplateGenerator.IacLanguage.IacModel.Name
		/// </summary>
		[DslDesign::DisplayNameResource("Variamos.IacTemplateGenerator.IacLanguage.IacModel/name.DisplayName", typeof(global::Variamos.IacTemplateGenerator.IacLanguage.IacLanguageDomainModel), "Variamos.IacTemplateGenerator.IacLanguage.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Variamos.IacTemplateGenerator.IacLanguage.IacModel/name.Description", typeof(global::Variamos.IacTemplateGenerator.IacLanguage.IacLanguageDomainModel), "Variamos.IacTemplateGenerator.IacLanguage.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("83d8ef07-00ab-4f81-8faf-bfca0d99f415")]
		public global::System.String name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				namePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the IacModel.name domain property.
		/// </summary>
		internal sealed partial class namePropertyHandler : DslModeling::DomainPropertyValueHandler<IacModel, global::System.String>
		{
			private namePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the IacModel.name domain property value handler.
			/// </summary>
			public static readonly namePropertyHandler Instance = new namePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the IacModel.name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return nameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(IacModel element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(IacModel element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region cloudProvider domain property code
		
		/// <summary>
		/// cloudProvider domain property Id.
		/// </summary>
		public static readonly global::System.Guid cloudProviderDomainPropertyId = new global::System.Guid(0x19122e18, 0xf20f, 0x4388, 0xb4, 0x2c, 0xf7, 0x97, 0xcf, 0x20, 0x83, 0xab);
		
		/// <summary>
		/// Storage for cloudProvider
		/// </summary>
		private CloudProviderEnumerator cloudProviderPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of cloudProvider domain property.
		/// Description for Variamos.IacTemplateGenerator.IacLanguage.IacModel.Cloud
		/// Provider
		/// </summary>
		[DslDesign::DisplayNameResource("Variamos.IacTemplateGenerator.IacLanguage.IacModel/cloudProvider.DisplayName", typeof(global::Variamos.IacTemplateGenerator.IacLanguage.IacLanguageDomainModel), "Variamos.IacTemplateGenerator.IacLanguage.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Variamos.IacTemplateGenerator.IacLanguage.IacModel/cloudProvider.Description", typeof(global::Variamos.IacTemplateGenerator.IacLanguage.IacLanguageDomainModel), "Variamos.IacTemplateGenerator.IacLanguage.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("19122e18-f20f-4388-b42c-f797cf2083ab")]
		public CloudProviderEnumerator cloudProvider
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return cloudProviderPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				cloudProviderPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the IacModel.cloudProvider domain property.
		/// </summary>
		internal sealed partial class cloudProviderPropertyHandler : DslModeling::DomainPropertyValueHandler<IacModel, CloudProviderEnumerator>
		{
			private cloudProviderPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the IacModel.cloudProvider domain property value handler.
			/// </summary>
			public static readonly cloudProviderPropertyHandler Instance = new cloudProviderPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the IacModel.cloudProvider domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return cloudProviderDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed CloudProviderEnumerator GetValue(IacModel element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.cloudProviderPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(IacModel element, CloudProviderEnumerator newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				CloudProviderEnumerator oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.cloudProviderPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region resourceGroup domain property code
		
		/// <summary>
		/// resourceGroup domain property Id.
		/// </summary>
		public static readonly global::System.Guid resourceGroupDomainPropertyId = new global::System.Guid(0x5acc08ff, 0x48ba, 0x4b65, 0xb0, 0xed, 0x2f, 0x85, 0x69, 0xa0, 0xc3, 0xca);
		
		/// <summary>
		/// Storage for resourceGroup
		/// </summary>
		private global::System.String resourceGroupPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of resourceGroup domain property.
		/// Description for Variamos.IacTemplateGenerator.IacLanguage.IacModel.Resource
		/// Group
		/// </summary>
		[DslDesign::DisplayNameResource("Variamos.IacTemplateGenerator.IacLanguage.IacModel/resourceGroup.DisplayName", typeof(global::Variamos.IacTemplateGenerator.IacLanguage.IacLanguageDomainModel), "Variamos.IacTemplateGenerator.IacLanguage.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Variamos.IacTemplateGenerator.IacLanguage.IacModel/resourceGroup.Description", typeof(global::Variamos.IacTemplateGenerator.IacLanguage.IacLanguageDomainModel), "Variamos.IacTemplateGenerator.IacLanguage.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("5acc08ff-48ba-4b65-b0ed-2f8569a0c3ca")]
		public global::System.String resourceGroup
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return resourceGroupPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				resourceGroupPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the IacModel.resourceGroup domain property.
		/// </summary>
		internal sealed partial class resourceGroupPropertyHandler : DslModeling::DomainPropertyValueHandler<IacModel, global::System.String>
		{
			private resourceGroupPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the IacModel.resourceGroup domain property value handler.
			/// </summary>
			public static readonly resourceGroupPropertyHandler Instance = new resourceGroupPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the IacModel.resourceGroup domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return resourceGroupDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(IacModel element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.resourceGroupPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(IacModel element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.resourceGroupPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Vms opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Vms.
		/// Description for
		/// Variamos.IacTemplateGenerator.IacLanguage.IacModelHasVms.IacModel
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Vm> Vms
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Vm>, Vm>(global::Variamos.IacTemplateGenerator.IacLanguage.IacModelHasVms.IacModelDomainRoleId);
			}
		}
		#endregion
		#region NetworkInterfaced opposite domain role accessor
		
		/// <summary>
		/// Gets a list of NetworkInterfaced.
		/// Description for
		/// Variamos.IacTemplateGenerator.IacLanguage.IacModelHasNetworkInterfaced.IacModel
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<NetworkInterface> NetworkInterfaced
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<NetworkInterface>, NetworkInterface>(global::Variamos.IacTemplateGenerator.IacLanguage.IacModelHasNetworkInterfaced.IacModelDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Variamos.IacTemplateGenerator.IacLanguage.Vm.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Variamos.IacTemplateGenerator.IacLanguage.NetworkInterface.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::Variamos.IacTemplateGenerator.IacLanguage.Vm sourceVm1 = sourceElement as global::Variamos.IacTemplateGenerator.IacLanguage.Vm;
			if (sourceVm1 != null)
			{
				// Create link for path IacModelHasVms.Vms
				this.Vms.Add(sourceVm1);

				return;
			}
				
			global::Variamos.IacTemplateGenerator.IacLanguage.NetworkInterface sourceNetworkInterface2 = sourceElement as global::Variamos.IacTemplateGenerator.IacLanguage.NetworkInterface;
			if (sourceNetworkInterface2 != null)
			{
				// Create link for path IacModelHasNetworkInterfaced.NetworkInterfaced
				this.NetworkInterfaced.Add(sourceNetworkInterface2);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::Variamos.IacTemplateGenerator.IacLanguage.Vm sourceVm1 = sourceElement as global::Variamos.IacTemplateGenerator.IacLanguage.Vm;
			if (sourceVm1 != null)
			{
				// Delete link for path IacModelHasVms.Vms
				
				foreach (DslModeling::ElementLink link in global::Variamos.IacTemplateGenerator.IacLanguage.IacModelHasVms.GetLinks((global::Variamos.IacTemplateGenerator.IacLanguage.IacModel)this, sourceVm1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Variamos.IacTemplateGenerator.IacLanguage.IacModelHasVms.IacModelDomainRoleId, global::Variamos.IacTemplateGenerator.IacLanguage.IacModelHasVms.VmDomainRoleId);
				}

				return;
			}
				
			global::Variamos.IacTemplateGenerator.IacLanguage.NetworkInterface sourceNetworkInterface2 = sourceElement as global::Variamos.IacTemplateGenerator.IacLanguage.NetworkInterface;
			if (sourceNetworkInterface2 != null)
			{
				// Delete link for path IacModelHasNetworkInterfaced.NetworkInterfaced
				
				foreach (DslModeling::ElementLink link in global::Variamos.IacTemplateGenerator.IacLanguage.IacModelHasNetworkInterfaced.GetLinks((global::Variamos.IacTemplateGenerator.IacLanguage.IacModel)this, sourceNetworkInterface2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Variamos.IacTemplateGenerator.IacLanguage.IacModelHasNetworkInterfaced.IacModelDomainRoleId, global::Variamos.IacTemplateGenerator.IacLanguage.IacModelHasNetworkInterfaced.NetworkInterfaceDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace Variamos.IacTemplateGenerator.IacLanguage
{
	/// <summary>
	/// DomainClass Vm
	/// Description for Variamos.IacTemplateGenerator.IacLanguage.Vm
	/// </summary>
	[DslDesign::DisplayNameResource("Variamos.IacTemplateGenerator.IacLanguage.Vm.DisplayName", typeof(global::Variamos.IacTemplateGenerator.IacLanguage.IacLanguageDomainModel), "Variamos.IacTemplateGenerator.IacLanguage.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Variamos.IacTemplateGenerator.IacLanguage.Vm.Description", typeof(global::Variamos.IacTemplateGenerator.IacLanguage.IacLanguageDomainModel), "Variamos.IacTemplateGenerator.IacLanguage.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Variamos.IacTemplateGenerator.IacLanguage.IacLanguageDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("e9b0540e-3619-4b9c-8b27-7c93df83f777")]
	public partial class Vm : AzureComponent
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Vm domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xe9b0540e, 0x3619, 0x4b9c, 0x8b, 0x27, 0x7c, 0x93, 0xdf, 0x83, 0xf7, 0x77);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Vm(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Vm(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region vmSize domain property code
		
		/// <summary>
		/// vmSize domain property Id.
		/// </summary>
		public static readonly global::System.Guid vmSizeDomainPropertyId = new global::System.Guid(0x3330d97b, 0x1e95, 0x41bb, 0xac, 0x3a, 0x87, 0x8d, 0x26, 0xa7, 0x3e, 0xd9);
		
		/// <summary>
		/// Storage for vmSize
		/// </summary>
		private global::System.String vmSizePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of vmSize domain property.
		/// Description for Variamos.IacTemplateGenerator.IacLanguage.Vm.Vm Size
		/// </summary>
		[DslDesign::DisplayNameResource("Variamos.IacTemplateGenerator.IacLanguage.Vm/vmSize.DisplayName", typeof(global::Variamos.IacTemplateGenerator.IacLanguage.IacLanguageDomainModel), "Variamos.IacTemplateGenerator.IacLanguage.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Variamos.IacTemplateGenerator.IacLanguage.Vm/vmSize.Description", typeof(global::Variamos.IacTemplateGenerator.IacLanguage.IacLanguageDomainModel), "Variamos.IacTemplateGenerator.IacLanguage.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("3330d97b-1e95-41bb-ac3a-878d26a73ed9")]
		public global::System.String vmSize
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return vmSizePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				vmSizePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Vm.vmSize domain property.
		/// </summary>
		internal sealed partial class vmSizePropertyHandler : DslModeling::DomainPropertyValueHandler<Vm, global::System.String>
		{
			private vmSizePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Vm.vmSize domain property value handler.
			/// </summary>
			public static readonly vmSizePropertyHandler Instance = new vmSizePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Vm.vmSize domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return vmSizeDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Vm element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.vmSizePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Vm element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.vmSizePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region IacModel opposite domain role accessor
		/// <summary>
		/// Gets or sets IacModel.
		/// Description for Variamos.IacTemplateGenerator.IacLanguage.IacModelHasVms.Vm
		/// </summary>
		public virtual IacModel IacModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Variamos.IacTemplateGenerator.IacLanguage.IacModelHasVms.VmDomainRoleId) as IacModel;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Variamos.IacTemplateGenerator.IacLanguage.IacModelHasVms.VmDomainRoleId, value);
			}
		}
		#endregion
		#region NetworkInterfaced opposite domain role accessor
		
		/// <summary>
		/// Gets a list of NetworkInterfaced.
		/// Description for
		/// Variamos.IacTemplateGenerator.IacLanguage.VmReferencesNetworkInterfaced.Vm
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<NetworkInterface> NetworkInterfaced
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<NetworkInterface>, NetworkInterface>(global::Variamos.IacTemplateGenerator.IacLanguage.VmReferencesNetworkInterfaced.VmDomainRoleId);
			}
		}
		#endregion
	}
}
namespace Variamos.IacTemplateGenerator.IacLanguage
{
	/// <summary>
	/// DomainClass AzureComponent
	/// Description for Variamos.IacTemplateGenerator.IacLanguage.AzureComponent
	/// </summary>
	[DslDesign::DisplayNameResource("Variamos.IacTemplateGenerator.IacLanguage.AzureComponent.DisplayName", typeof(global::Variamos.IacTemplateGenerator.IacLanguage.IacLanguageDomainModel), "Variamos.IacTemplateGenerator.IacLanguage.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Variamos.IacTemplateGenerator.IacLanguage.AzureComponent.Description", typeof(global::Variamos.IacTemplateGenerator.IacLanguage.IacLanguageDomainModel), "Variamos.IacTemplateGenerator.IacLanguage.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Variamos.IacTemplateGenerator.IacLanguage.IacLanguageDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (name = {namePropertyStorage})")]
	[DslModeling::DomainObjectId("6a35f0a4-ca0d-445b-a566-c61f64501a61")]
	public abstract partial class AzureComponent : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// AzureComponent domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x6a35f0a4, 0xca0d, 0x445b, 0xa5, 0x66, 0xc6, 0x1f, 0x64, 0x50, 0x1a, 0x61);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected AzureComponent(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region name domain property code
		
		/// <summary>
		/// name domain property Id.
		/// </summary>
		public static readonly global::System.Guid nameDomainPropertyId = new global::System.Guid(0x5b20d601, 0x5bf8, 0x472d, 0x83, 0x52, 0x08, 0x35, 0xd7, 0xf7, 0xb3, 0x1c);
		
		/// <summary>
		/// Storage for name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of name domain property.
		/// Description for Variamos.IacTemplateGenerator.IacLanguage.AzureComponent.Name
		/// </summary>
		[DslDesign::DisplayNameResource("Variamos.IacTemplateGenerator.IacLanguage.AzureComponent/name.DisplayName", typeof(global::Variamos.IacTemplateGenerator.IacLanguage.IacLanguageDomainModel), "Variamos.IacTemplateGenerator.IacLanguage.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Variamos.IacTemplateGenerator.IacLanguage.AzureComponent/name.Description", typeof(global::Variamos.IacTemplateGenerator.IacLanguage.IacLanguageDomainModel), "Variamos.IacTemplateGenerator.IacLanguage.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("5b20d601-5bf8-472d-8352-0835d7f7b31c")]
		public global::System.String name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				namePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the AzureComponent.name domain property.
		/// </summary>
		internal sealed partial class namePropertyHandler : DslModeling::DomainPropertyValueHandler<AzureComponent, global::System.String>
		{
			private namePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the AzureComponent.name domain property value handler.
			/// </summary>
			public static readonly namePropertyHandler Instance = new namePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the AzureComponent.name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return nameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(AzureComponent element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(AzureComponent element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region label domain property code
		
		/// <summary>
		/// label domain property Id.
		/// </summary>
		public static readonly global::System.Guid labelDomainPropertyId = new global::System.Guid(0xdb650e2d, 0x155f, 0x430d, 0xb5, 0x74, 0xe8, 0x12, 0xe0, 0x5d, 0x51, 0xf8);
		
		/// <summary>
		/// Storage for label
		/// </summary>
		private global::System.String labelPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of label domain property.
		/// Description for Variamos.IacTemplateGenerator.IacLanguage.AzureComponent.Label
		/// </summary>
		[DslDesign::DisplayNameResource("Variamos.IacTemplateGenerator.IacLanguage.AzureComponent/label.DisplayName", typeof(global::Variamos.IacTemplateGenerator.IacLanguage.IacLanguageDomainModel), "Variamos.IacTemplateGenerator.IacLanguage.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Variamos.IacTemplateGenerator.IacLanguage.AzureComponent/label.Description", typeof(global::Variamos.IacTemplateGenerator.IacLanguage.IacLanguageDomainModel), "Variamos.IacTemplateGenerator.IacLanguage.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("db650e2d-155f-430d-b574-e812e05d51f8")]
		public global::System.String label
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return labelPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				labelPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the AzureComponent.label domain property.
		/// </summary>
		internal sealed partial class labelPropertyHandler : DslModeling::DomainPropertyValueHandler<AzureComponent, global::System.String>
		{
			private labelPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the AzureComponent.label domain property value handler.
			/// </summary>
			public static readonly labelPropertyHandler Instance = new labelPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the AzureComponent.label domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return labelDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(AzureComponent element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.labelPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(AzureComponent element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.labelPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
namespace Variamos.IacTemplateGenerator.IacLanguage
{
	/// <summary>
	/// DomainClass NetworkInterface
	/// Description for Variamos.IacTemplateGenerator.IacLanguage.NetworkInterface
	/// </summary>
	[DslDesign::DisplayNameResource("Variamos.IacTemplateGenerator.IacLanguage.NetworkInterface.DisplayName", typeof(global::Variamos.IacTemplateGenerator.IacLanguage.IacLanguageDomainModel), "Variamos.IacTemplateGenerator.IacLanguage.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Variamos.IacTemplateGenerator.IacLanguage.NetworkInterface.Description", typeof(global::Variamos.IacTemplateGenerator.IacLanguage.IacLanguageDomainModel), "Variamos.IacTemplateGenerator.IacLanguage.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Variamos.IacTemplateGenerator.IacLanguage.IacLanguageDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("d798df07-bc61-4ccf-b9b8-43d54a829b36")]
	public partial class NetworkInterface : AzureComponent
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// NetworkInterface domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xd798df07, 0xbc61, 0x4ccf, 0xb9, 0xb8, 0x43, 0xd5, 0x4a, 0x82, 0x9b, 0x36);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public NetworkInterface(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public NetworkInterface(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region IacModel opposite domain role accessor
		/// <summary>
		/// Gets or sets IacModel.
		/// Description for
		/// Variamos.IacTemplateGenerator.IacLanguage.IacModelHasNetworkInterfaced.NetworkInterface
		/// </summary>
		public virtual IacModel IacModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Variamos.IacTemplateGenerator.IacLanguage.IacModelHasNetworkInterfaced.NetworkInterfaceDomainRoleId) as IacModel;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Variamos.IacTemplateGenerator.IacLanguage.IacModelHasNetworkInterfaced.NetworkInterfaceDomainRoleId, value);
			}
		}
		#endregion
		#region Vms opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Vms.
		/// Description for
		/// Variamos.IacTemplateGenerator.IacLanguage.VmReferencesNetworkInterfaced.NetworkInterface
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Vm> Vms
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Vm>, Vm>(global::Variamos.IacTemplateGenerator.IacLanguage.VmReferencesNetworkInterfaced.NetworkInterfaceDomainRoleId);
			}
		}
		#endregion
	}
}
